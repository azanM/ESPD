using eSPD.Core;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace eSPD
{
    public partial class newFormHome : System.Web.UI.Page
    {
        private static msKaryawan karyawan = new msKaryawan();
        private static classSpd oSPD = new classSpd();
        private static string strID = string.Empty;
        private static dsSPDDataContext ctx = new dsSPDDataContext();
        private static ApprovalSPDUrl approvalSPDUrl = new ApprovalSPDUrl();
        protected void Page_Load(object sender, EventArgs e)
        {
            if (Session["IDLogin"] == null)
            {
                Response.Redirect("frmHome.aspx");
            }


            strID = (string)Session["IDLogin"];
            karyawan = oSPD.getKaryawan(strID);
            Session["nrpLogin"] = karyawan.nrp;

            if (!IsPostBack)
            {
                if (ifga(karyawan.nrp))
                {
                    bindFindSPDGa();
                    spdGA.Visible = true;
                }
                bindFind();
                bindFindTujuan();
            }
        }

        #region check if login ga
        private bool ifga(string nrp)
        {
            bool returner = false;
            try
            {
                int role = ctx.msUsers.First(o => o.nrp.Equals(nrp)).roleId;
                if (role == 17) returner = true;
            }
            catch (Exception)
            {
                returner = false;
            }

            return returner;
        }
        #endregion

        #region approvalAtasan
        protected void gvViewSPD_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            gvViewSPD.PageIndex = e.NewPageIndex;
            bindFind();
        }

        protected void btnFind_Click(object sender, EventArgs e)
        {
            lblMessage.Visible = false;
            bindFind();
        }

        void bindFind()
        {
            string filter = !string.IsNullOrEmpty(txtTglBerangkat.Text.Trim()) ? "tglBerangkat" : string.Empty;
            string param = txtTglBerangkat.Text;
            var data = ctx.sp_GetApprovalSPDAtasanLangsung(karyawan.nrp, filter, param).ToList();
            gvViewSPD.DataSource = data;
            gvViewSPD.DataBind();

            if (!data.Any())
            {
                gvViewSPD.Visible = false;
                lblMessage.Visible = true;
                lblMessage.Text = "No data";
            }
            else
            {
                gvViewSPD.Visible = true;
            }
        }

        protected void gvViewSPD_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            lblMessage.Visible = false;
            string[] command = e.CommandArgument.ToString().Split(';');
            //split parameter nospd, nrpapproval, index
            switch (e.CommandName)
            {
                case "Detail":
                    string URL = "~/newFormRequestDetail.aspx?encrypt=" + Encrypto.Encrypt(e.CommandArgument.ToString());
                    URL = Page.ResolveClientUrl(URL);
                    ScriptManager.RegisterStartupScript(this, GetType(), "openDetail", "openDetail('" + URL + "');", true);
                    break;

                case "Approve":
                    lblMessage.Text = approvalSPDUrl.ChangeStatus(command[0], e.CommandName, command[1], command[2]);
                    break;

                case "Reject":
                    lblMessage.Text = approvalSPDUrl.ChangeStatus(command[0], e.CommandName, command[1], command[2]);

                    break;
                default:
                    break;
            }
            lblMessage.Visible = true;
            bindFind();
        }

        protected void gvViewSPD_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            lblMessage.Visible = true;
        }
        #endregion

        #region approval tujuan
        void bindFindTujuan()
        {
            DateTime tglBerangkat = (string.IsNullOrEmpty(txTglBerangkatTujuan.Text) ? DateTime.Now : Convert.ToDateTime(txTglBerangkatTujuan.Text));

            var data = (from p in ctx.trSPDs
                        where p.nrpApprovalTujuan.Trim() == karyawan.nrp
                        && p.status == "SPD Menunggu approval tujuan"
                        && p.isSubmit == true
                        && p.isApproved == null
                        && (p.isCancel == null || p.isCancel == false)
                        && (string.IsNullOrEmpty(txTglBerangkatTujuan.Text) ? true : p.tglBerangkat == tglBerangkat)
                        select new
                                {
                                    noSPD = p.noSPD,
                                    nrp = p.nrp,
                                    namaLengkap = p.namaLengkap,
                                    cabangTujuan = p.companyCodeTujuan != null ? p.companyCodeTujuan + " - " + p.personelAreaTujuan + " - " + p.pSubAreaTujuan : p.tempatTujuanLain,
                                    keperluan = p.idKeperluan != null ? p.msKeperluan.keperluan : p.keperluanLain,
                                    tglBerangkat = p.tglBerangkat.ToShortDateString(),
                                    tglKembali = p.tglKembali.ToShortDateString(),
                                    status = p.status
                                }).OrderByDescending(o => o.noSPD).ToList();

            gvViewSPDTujuan.DataSource = data;
            gvViewSPDTujuan.DataBind();

            if (!data.Any())
            {
                gvViewSPDTujuan.Visible = false;
                lblMessageTujuan.Visible = true;
                lblMessageTujuan.Text = "No data";
            }
            else
            {
                gvViewSPDTujuan.Visible = true;
            }
        }

        protected void gvViewSPDTujuan_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            gvViewSPDTujuan.PageIndex = e.NewPageIndex;
            bindFindTujuan();
        }
        protected void gvViewSPDTujuan_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            lblMessageTujuan.Visible = false;
            switch (e.CommandName)
            {
                case "Detail":
                    string URL = "~/newFormRequestDetail.aspx?encrypt=" + Encrypto.Encrypt(e.CommandArgument.ToString());
                    URL = Page.ResolveClientUrl(URL);
                    ScriptManager.RegisterStartupScript(this, GetType(), "openDetail", "openDetail('" + URL + "');", true);
                    break;

                case "Approve":
                    lblMessageTujuan.Text = approvalSPDUrl.ChangeStatus(e.CommandArgument.ToString(), e.CommandName, karyawan.nrp, string.Empty);

                    break;

                case "Reject":
                    lblMessageTujuan.Text = approvalSPDUrl.ChangeStatus(e.CommandArgument.ToString(), e.CommandName, karyawan.nrp, string.Empty);

                    break;
                default:
                    break;
            }
            lblMessageTujuan.Visible = true;
            bindFindTujuan();
        }

        protected void btnFindTujuan_Click(object sender, EventArgs e)
        {
            lblMessageTujuan.Visible = false;
            bindFindTujuan();
        }

        protected void gvViewSPDTujuan_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            lblMessageTujuan.Visible = true;
        }
        #endregion

        #region list SPD GA
        protected void gvViewSPDGA_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            gvViewSPDGA.PageIndex = e.NewPageIndex;
            bindFindSPDGa();
        }

        protected void gvViewSPDGA_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            if (e.CommandName == "Detail")
            {
                string URL = "~/newFormRequestDetail.aspx?encrypt=" + Encrypto.Encrypt(e.CommandArgument.ToString());
                URL = Page.ResolveClientUrl(URL);
                ScriptManager.RegisterStartupScript(this, GetType(), "openDetail", "openDetail('" + URL + "');", true);
            }

            if (e.CommandName == "Cancel")
            {
                lblMessageGA.Text = approvalSPDUrl.ChangeStatus(e.CommandArgument.ToString(), e.CommandName, karyawan.nrp, string.Empty);
            }
        }

        protected void ddlParamGA_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (ddlParamGA.SelectedValue != "tglBerangkat") ceFilterGA.Enabled = false;
            else ceFilterGA.Enabled = true;
        }

        protected void btnFindGA_Click(object sender, EventArgs e)
        {
            bindFindSPDGa();
        }

        void bindFindSPDGa()
        {
            string filter = ddlParamGA.Text.Trim() == "--Select--" ? "" : ddlParamGA.SelectedItem.Value;
            string param = txFilterGA.Text;
            var data = ctx.sp_GetListSPDGA(filter, param);
            gvViewSPDGA.DataSource = data;
            gvViewSPDGA.DataBind();
        }

        protected void gvViewSPDGA_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            lblMessageGA.Visible = true;
            bindFindSPDGa();
        }

        protected void gvViewSPDGA_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                var Cancel = DataBinder.Eval(e.Row.DataItem, "isCancel");
                bool isCancel = false;
                if (Cancel != null) isCancel = true;

                if (isCancel)
                {
                    Button btnCancel = (Button)e.Row.FindControl("btnCancel");
                    btnCancel.Visible = false;
                }
            }
        }

        #endregion
    }
}