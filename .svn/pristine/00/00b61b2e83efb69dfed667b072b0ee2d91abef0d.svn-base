using eSPD.Core;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace eSPD
{
    /// <summary>
    /// Summary description for ApprovalSPDUrl
    /// </summary>
    public class ApprovalSPDUrl : IHttpHandler
    {
        string errorMessage = string.Empty;
        public void ProcessRequest(HttpContext context)
        {
            string NoSPD = Encrypto.Decrypt(context.Request["sCrypt"]);
            string EmailAppproval = Encrypto.Decrypt(context.Request["eCrypt"]);
            string NrpApproval = Encrypto.Decrypt(context.Request["nCrypt"]);
            string index = context.Request["index"];
            string Action = Encrypto.Decrypt(context.Request["Action"]);

            context.Response.ContentType = "text/plain";
            context.Response.Write(ChangeStatus(NoSPD, Action, NrpApproval, index));
        }

        #region change status
        public string ChangeStatus(string nospd, string action, string nrp, string index)
        {
            using (var ctx = new dsSPDDataContext())
            {
                // get data spd
                var dataSpd = ctx.trSPDs.FirstOrDefault(o => o.noSPD == nospd);

                // get approval count buat spd
                var approvalCount = ctx.ApprovalStatus.Where(o => o.NoSPD == nospd).Count();

                if (dataSpd == null) errorMessage += "SPD tidak ditemukan, kemungkinan data lama, jadi spd ini tidak bisa di " + action;
                if (approvalCount == 0) errorMessage += "Approval " + nospd + " tidak ditemukan, kemungkinan data lama, jadi spd ini tidak bisa di " + action;

                // jika tidak ada error message
                if (string.IsNullOrEmpty(errorMessage))
                {
                    switch (action.ToLower())
                    {
                        case "cancel":
                            // jika sudah di cancel return cancel alert
                            if (dataSpd.isCancel == true)
                            {
                                if (dataSpd.isCancelDate == null) dataSpd.isCancelDate = DateTime.Now;
                                return "approval tidak bisa dieksekusi, karena No Spd : " + nospd + "  telah di" + action + " pada : " + dataSpd.isCancelDate.Value.ToString("dd MMMM yyyy HH:mm");
                            }

                            //cancel method
                            CancelSPD(dataSpd, nrp, nospd);

                            break;
                        case "reject":
                            // jika sudah di cancel return cancel alert
                            if (dataSpd.isCancel == true)
                            {
                                if (dataSpd.isCancelDate == null) dataSpd.isCancelDate = DateTime.Now;
                                return "approval tidak bisa dieksekusi, karena No Spd : " + nospd + "  telah dicancel pada : " + dataSpd.isCancelDate.Value.ToString("dd MMMM yyyy HH:mm");
                            }

                            // jika sudah di reject return reject alert
                            if (dataSpd.isApproved == false)
                            {
                                if (dataSpd.isApprovedDate == null) dataSpd.isApprovedDate = DateTime.Now;
                                return "approval tidak bisa dieksekusi, karena No Spd : " + nospd + "  telah di" + action + " pada : " + dataSpd.isApprovedDate.Value.ToString("dd MMMM yyyy HH:mm");
                            }

                            //reject method
                            string status = RejectSPD(dataSpd, nrp, nospd, index);

                            if (!string.IsNullOrEmpty(status))
                            {
                                return status;
                            }

                            break;
                        case "approve":
                            // jika sudah di reject return reject alert
                            if (dataSpd.isApproved != null)
                            {
                                string stringStatus = dataSpd.isApproved.Value == true ? "approve" : "reject";
                                if (dataSpd.isApprovedDate == null) dataSpd.isApprovedDate = DateTime.Now;
                                return "approval tidak bisa dieksekusi, karena No Spd : " + nospd + "  telah " + stringStatus + " pada : " + dataSpd.isApprovedDate.Value.ToString("dd MMMM yyyy HH:mm");
                            }

                            // jika sudah di cancel return cancel alert
                            if (dataSpd.isCancel == true)
                            {
                                if (dataSpd.isCancelDate == null) dataSpd.isCancelDate = DateTime.Now;
                                return "approval tidak bisa dieksekusi, karena No Spd : " + nospd + "  telah dicancel pada : " + dataSpd.isCancelDate.Value.ToString("dd MMMM yyyy HH:mm");
                            }

                            //approve method
                            string status2 = ApproveSPD(dataSpd, nrp, nospd, index);

                            if (!string.IsNullOrEmpty(status2))
                            {
                                return status2;
                            }

                            break;
                        default:
                            break;

                    }

                    return "No Spd : " + nospd + " berhasil di" + action;
                }
                else // jika error return error
                {
                    return errorMessage;
                }
            }
        }
        #endregion

        #region cancel
        private void CancelSPD(trSPD dataSpd, string nrp, string nospd)
        {
            using (var ctx = new dsSPDDataContext())
            {
                dataSpd = ctx.trSPDs.FirstOrDefault(o => o.noSPD == nospd);
                dataSpd.status = "SPD Cancel";
                dataSpd.isCancel = true;
                dataSpd.diubahOleh = nrp;
                dataSpd.diubahTanggal = DateTime.Now;
                dataSpd.isCancelDate = DateTime.Now;

                // get data claim
                var dataClaim = ctx.trClaims.FirstOrDefault(o => o.noSPD == nospd);
                if (dataClaim != null)
                {
                    dataClaim.status = "SPD Cancel";
                    dataClaim.isCancel = true;
                    dataClaim.diubahOleh = nrp;
                    dataClaim.diubahTanggal = DateTime.Now;
                    dataClaim.isCancelDate = DateTime.Now;
                }

                ctx.SubmitChanges();

                // get all approval
                var approval = ctx.ApprovalStatus.Where(o => o.NoSPD == nospd).ToList();

                //get all people has been approve
                var approvalHasApproved = approval.Where(o => o.Status != null).Distinct().ToList();

                //send email to all people has been approved
                foreach (var item in approvalHasApproved)
                {
                    EmailCore.InformasiCancelSPD(item.NrpApproval, dataSpd.noSPD, dataSpd);
                }
            }
        }
        #endregion

        #region reject
        private string RejectSPD(trSPD dataSpd, string nrp, string nospd, string index)
        {
            using (var ctx = new dsSPDDataContext())
            {
                dataSpd = ctx.trSPDs.FirstOrDefault(o => o.noSPD == nospd);
                string returner = string.Empty;
                // get all approval
                var approval = ctx.ApprovalStatus.Where(o => o.NoSPD == nospd).ToList();

                // get current approval
                int? indexInt = null;
                if (!string.IsNullOrEmpty(index)) indexInt = Convert.ToInt32(index);

                var currentApproval = approval.FirstOrDefault(o => o.NrpApproval == nrp && o.Status == null && o.IndexLevel == indexInt);

                // jika current approval, absolute bukan approval tujuan yang rejek, dikarenakan status masih null
                if (currentApproval != null)
                {
                    dataSpd.status = "SPD ditolak " + currentApproval.ApprovalRule.Deskripsi;
                    dataSpd.isApproved = false;
                    dataSpd.diubahTanggal = DateTime.Now;
                    dataSpd.isApprovedDate = DateTime.Now;

                    currentApproval.Status = false;
                    currentApproval.ModifiedDate = DateTime.Now;
                }

                // jika nrp rejek sama dengan nrp approval tujuan, & current approval tidak ditemukan
                if (nrp == dataSpd.nrpApprovalTujuan && currentApproval == null)
                {
                    dataSpd.status = "SPD Ditolak tujuan";

                    dataSpd.isApproved = false;
                    dataSpd.diubahTanggal = DateTime.Now;
                    dataSpd.isApprovedDate = DateTime.Now;
                }

                if (DateTime.Now.Date < dataSpd.tglBerangkat.Date)
                {
                    returner += "SPD hanya bisa direject pada tanggal : " + dataSpd.tglBerangkat.ToString("dd MMMM yyyy")
                            + ", atau lebih.";
                }

                if (string.IsNullOrEmpty(returner))
                {
                    ctx.SubmitChanges();

                    // send informasi ke pembuat
                    EmailCore.InformasiSPD(dataSpd.dibuatOleh, dataSpd.noSPD, dataSpd);
                }

                return returner;
            }
        }
        #endregion

        #region approve
        private string ApproveSPD(trSPD dataSpd, string nrp, string nospd, string index)
        {
            using (var ctx = new dsSPDDataContext())
            {
                dataSpd = ctx.trSPDs.FirstOrDefault(o => o.noSPD == nospd);
                // get all approval
                var approval = ctx.ApprovalStatus.Where(o => o.NoSPD == nospd).OrderBy(o => o.IndexLevel).ToList();

                // get current approval
                int? indexInt = null;
                if (!string.IsNullOrEmpty(index)) indexInt = Convert.ToInt32(index);

                var currentApproval = approval.FirstOrDefault(o => o.NrpApproval == nrp && o.Status == null && o.IndexLevel == indexInt);

                // approval tujuan, dan pastikan approval semua sudah diapprove
                var countCekApproval = approval.Where(o => o.Status == null || o.Status == false).Count();

                if (nrp == dataSpd.nrpApprovalTujuan && currentApproval == null && string.IsNullOrEmpty(index) && countCekApproval == 0)
                {
                    //cuman boleh ngeprove hari berangkat ato udah nyampe,
                    if (DateTime.Now.Date < dataSpd.tglBerangkat.Date)
                    {
                        return "SPD hanya bisa diapprove pada tanggal : " + dataSpd.tglBerangkat.ToString("dd MMMM yyyy")
                       + ", atau lebih.";
                    }
                    else
                    {
                        dataSpd.status = "SPD Full Approved";

                        dataSpd.isApproved = true;
                        dataSpd.diubahTanggal = DateTime.Now;
                        dataSpd.isApprovedDate = DateTime.Now;

                        ctx.SubmitChanges();
                        // send informasi ke pembuat
                        EmailCore.InformasiSPD(dataSpd.dibuatOleh, dataSpd.noSPD, dataSpd);

                        return string.Empty;
                    }
                }

                //probabilitas 1% untuk approval tujuan dua kali approve, saat ini method sudah di cover sama method if action diatas, kecuali anomali data

                // jika current approval, absolute bukan approval tujuan yang approve, dikarenakan status masih null
                if (currentApproval != null && !string.IsNullOrEmpty(index))
                {
                    // get next approval
                    var nextApproval = approval.FirstOrDefault(o => o.IndexLevel == (currentApproval.IndexLevel + 1));

                    currentApproval.Status = true;
                    currentApproval.ModifiedDate = DateTime.Now;

                    //set status menunggu approval selanjutnya 
                    if (nextApproval != null)
                    {
                        dataSpd.status = "SPD Menunggu approval " + nextApproval.ApprovalRule.Deskripsi;

                        ctx.SubmitChanges();

                        string indexNext = nextApproval.IndexLevel.Value.ToString();
                        // send email approval Atasan atau tujuan
                        EmailCore.ApprovalSPD(nextApproval.NrpApproval, dataSpd.noSPD, indexNext, dataSpd);

                        // send informasi ke pembuat
                        EmailCore.InformasiSPD(dataSpd.dibuatOleh, dataSpd.noSPD, dataSpd);

                    }
                    //jika tidak ada next approval lagi
                    else
                    {
                        dataSpd.status = "SPD Menunggu approval tujuan";

                        ctx.SubmitChanges();

                        // send email approval Atasan atau tujuan
                        EmailCore.ApprovalSPD(dataSpd.nrpApprovalTujuan, dataSpd.noSPD, string.Empty, dataSpd);

                        // send informasi ke pembuat
                        EmailCore.InformasiSPD(dataSpd.dibuatOleh, dataSpd.noSPD, dataSpd);

                        //send email ke GA
                        if (dataSpd.tiket.ToLower().Contains("dicarikan"))
                        {
                            var role = (from p in ctx.msUsers
                                        where p.roleId == 17
                                        select p.nrp).ToList();

                            var dataGa = ctx.msKaryawans
                                        .Where(o =>
                                            o.coCd == "0001" &&
                                            role.Contains(o.nrp));

                            foreach (var item in dataGa)
                            {
                                EmailCore.InformasiPencarianTiket(item.nrp, dataSpd.noSPD, dataSpd);
                            }
                        }
                    }

                    // return ok
                    return string.Empty;
                }
                else
                // jika pernah approve
                {
                    // find has approved
                    var hasApproved = approval.Where(o => o.NrpApproval == nrp && o.Status != null);

                    if (hasApproved.Count() > 0)
                    {
                        var data = hasApproved.FirstOrDefault(o => o.IndexLevel == indexInt);

                        var status = data.Status != null ? data.Status.Value : false;

                        var stringStatus = status == true ? "approve" : "reject";
                        if (data.ModifiedDate == null) data.ModifiedDate = DateTime.Now;
                        return "approval tidak dieksekusi karena No Spd : " + nospd + ", telah " + stringStatus + " sebelumnya pada : " + data.ModifiedDate.Value.ToString("dd MMMM yyyy HH:mm");
                    }
                    else
                    {
                        // probabilitas 1% karena pasti selalu masuk if induk terlebih dahulu, kecuali anomali data
                        return string.Empty;
                    }
                }
            }
        }
        #endregion

        public bool IsReusable
        {
            get
            {
                return false;
            }
        }
    }
}